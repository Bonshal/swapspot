name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint
      run: npm run lint
      
    - name: Build
      run: npm run build
      
    # Disabled test for now as we have none yet
    # - name: Test
    #   run: npm test
      
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: ./dist
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-
          
  deploy-staging:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Restore cached build
      uses: actions/cache@v3
      with:
        path: ./dist
        key: ${{ runner.os }}-build-${{ github.sha }}
        
    - name: Deploy to Staging
      run: |
        echo "Deploying to staging environment"
        # This would be replaced with actual deployment commands
        # For example:
        # - SSH into staging server
        # - Copy build files
        # - Restart services
